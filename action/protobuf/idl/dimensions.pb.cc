// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dimensions.proto

#include "dimensions.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace test {
PROTOBUF_CONSTEXPR DimensionValues::DimensionValues(
    ::_pbi::ConstantInitialized)
  : value_(){}
struct DimensionValuesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DimensionValuesDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DimensionValuesDefaultTypeInternal() {}
  union {
    DimensionValues _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DimensionValuesDefaultTypeInternal _DimensionValues_default_instance_;
PROTOBUF_CONSTEXPR DimensionProto_DimensionsEntry_DoNotUse::DimensionProto_DimensionsEntry_DoNotUse(
    ::_pbi::ConstantInitialized){}
struct DimensionProto_DimensionsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DimensionProto_DimensionsEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DimensionProto_DimensionsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DimensionProto_DimensionsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DimensionProto_DimensionsEntry_DoNotUseDefaultTypeInternal _DimensionProto_DimensionsEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DimensionProto::DimensionProto(
    ::_pbi::ConstantInitialized)
  : dimensions_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct DimensionProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DimensionProtoDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DimensionProtoDefaultTypeInternal() {}
  union {
    DimensionProto _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DimensionProtoDefaultTypeInternal _DimensionProto_default_instance_;
}  // namespace test
static ::_pb::Metadata file_level_metadata_dimensions_2eproto[3];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_dimensions_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dimensions_2eproto = nullptr;

const uint32_t TableStruct_dimensions_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test::DimensionValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::test::DimensionValues, value_),
  PROTOBUF_FIELD_OFFSET(::test::DimensionProto_DimensionsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::test::DimensionProto_DimensionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::test::DimensionProto_DimensionsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::test::DimensionProto_DimensionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::test::DimensionProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::test::DimensionProto, dimensions_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::test::DimensionValues)},
  { 7, 15, -1, sizeof(::test::DimensionProto_DimensionsEntry_DoNotUse)},
  { 17, -1, -1, sizeof(::test::DimensionProto)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::test::_DimensionValues_default_instance_._instance,
  &::test::_DimensionProto_DimensionsEntry_DoNotUse_default_instance_._instance,
  &::test::_DimensionProto_default_instance_._instance,
};

const char descriptor_table_protodef_dimensions_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020dimensions.proto\022\004test\" \n\017DimensionVal"
  "ues\022\r\n\005value\030\001 \003(\t\"\224\001\n\016DimensionProto\0228\n"
  "\ndimensions\030\001 \003(\0132$.test.DimensionProto."
  "DimensionsEntry\032H\n\017DimensionsEntry\022\013\n\003ke"
  "y\030\001 \001(\t\022$\n\005value\030\002 \001(\0132\025.test.DimensionV"
  "alues:\0028\001B\003\370\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_dimensions_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dimensions_2eproto = {
    false, false, 222, descriptor_table_protodef_dimensions_2eproto,
    "dimensions.proto",
    &descriptor_table_dimensions_2eproto_once, nullptr, 0, 3,
    schemas, file_default_instances, TableStruct_dimensions_2eproto::offsets,
    file_level_metadata_dimensions_2eproto, file_level_enum_descriptors_dimensions_2eproto,
    file_level_service_descriptors_dimensions_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dimensions_2eproto_getter() {
  return &descriptor_table_dimensions_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dimensions_2eproto(&descriptor_table_dimensions_2eproto);
namespace test {

// ===================================================================

class DimensionValues::_Internal {
 public:
};

DimensionValues::DimensionValues(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  value_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:test.DimensionValues)
}
DimensionValues::DimensionValues(const DimensionValues& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      value_(from.value_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:test.DimensionValues)
}

inline void DimensionValues::SharedCtor() {
}

DimensionValues::~DimensionValues() {
  // @@protoc_insertion_point(destructor:test.DimensionValues)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DimensionValues::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void DimensionValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DimensionValues::Clear() {
// @@protoc_insertion_point(message_clear_start:test.DimensionValues)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DimensionValues::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_value();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "test.DimensionValues.value"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DimensionValues::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.DimensionValues)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string value = 1;
  for (int i = 0, n = this->_internal_value_size(); i < n; i++) {
    const auto& s = this->_internal_value(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "test.DimensionValues.value");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.DimensionValues)
  return target;
}

size_t DimensionValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.DimensionValues)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string value = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(value_.size());
  for (int i = 0, n = value_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      value_.Get(i));
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DimensionValues::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DimensionValues::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DimensionValues::GetClassData() const { return &_class_data_; }

void DimensionValues::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DimensionValues *>(to)->MergeFrom(
      static_cast<const DimensionValues &>(from));
}


void DimensionValues::MergeFrom(const DimensionValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.DimensionValues)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DimensionValues::CopyFrom(const DimensionValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.DimensionValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DimensionValues::IsInitialized() const {
  return true;
}

void DimensionValues::InternalSwap(DimensionValues* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DimensionValues::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dimensions_2eproto_getter, &descriptor_table_dimensions_2eproto_once,
      file_level_metadata_dimensions_2eproto[0]);
}

// ===================================================================

DimensionProto_DimensionsEntry_DoNotUse::DimensionProto_DimensionsEntry_DoNotUse() {}
DimensionProto_DimensionsEntry_DoNotUse::DimensionProto_DimensionsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DimensionProto_DimensionsEntry_DoNotUse::MergeFrom(const DimensionProto_DimensionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DimensionProto_DimensionsEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dimensions_2eproto_getter, &descriptor_table_dimensions_2eproto_once,
      file_level_metadata_dimensions_2eproto[1]);
}

// ===================================================================

class DimensionProto::_Internal {
 public:
};

DimensionProto::DimensionProto(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  dimensions_(arena) {
  SharedCtor();
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &DimensionProto::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:test.DimensionProto)
}
DimensionProto::DimensionProto(const DimensionProto& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dimensions_.MergeFrom(from.dimensions_);
  // @@protoc_insertion_point(copy_constructor:test.DimensionProto)
}

inline void DimensionProto::SharedCtor() {
}

DimensionProto::~DimensionProto() {
  // @@protoc_insertion_point(destructor:test.DimensionProto)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void DimensionProto::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  dimensions_.Destruct();
}

void DimensionProto::ArenaDtor(void* object) {
  DimensionProto* _this = reinterpret_cast< DimensionProto* >(object);
  _this->dimensions_.Destruct();
}
void DimensionProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DimensionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:test.DimensionProto)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimensions_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DimensionProto::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, .test.DimensionValues> dimensions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&dimensions_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DimensionProto::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:test.DimensionProto)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .test.DimensionValues> dimensions = 1;
  if (!this->_internal_dimensions().empty()) {
    using MapType = ::_pb::Map<std::string, ::test::DimensionValues>;
    using WireHelper = DimensionProto_DimensionsEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_dimensions();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "test.DimensionProto.DimensionsEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:test.DimensionProto)
  return target;
}

size_t DimensionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:test.DimensionProto)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, .test.DimensionValues> dimensions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_dimensions_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, ::test::DimensionValues >::const_iterator
      it = this->_internal_dimensions().begin();
      it != this->_internal_dimensions().end(); ++it) {
    total_size += DimensionProto_DimensionsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DimensionProto::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    DimensionProto::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DimensionProto::GetClassData() const { return &_class_data_; }

void DimensionProto::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<DimensionProto *>(to)->MergeFrom(
      static_cast<const DimensionProto &>(from));
}


void DimensionProto::MergeFrom(const DimensionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:test.DimensionProto)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  dimensions_.MergeFrom(from.dimensions_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DimensionProto::CopyFrom(const DimensionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:test.DimensionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DimensionProto::IsInitialized() const {
  return true;
}

void DimensionProto::InternalSwap(DimensionProto* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  dimensions_.InternalSwap(&other->dimensions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DimensionProto::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dimensions_2eproto_getter, &descriptor_table_dimensions_2eproto_once,
      file_level_metadata_dimensions_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace test
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::test::DimensionValues*
Arena::CreateMaybeMessage< ::test::DimensionValues >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test::DimensionValues >(arena);
}
template<> PROTOBUF_NOINLINE ::test::DimensionProto_DimensionsEntry_DoNotUse*
Arena::CreateMaybeMessage< ::test::DimensionProto_DimensionsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test::DimensionProto_DimensionsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::test::DimensionProto*
Arena::CreateMaybeMessage< ::test::DimensionProto >(Arena* arena) {
  return Arena::CreateMessageInternal< ::test::DimensionProto >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
